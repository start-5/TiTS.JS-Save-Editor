import type { Serializable } from '@shared/types/game/serializable';
import type { BreastRow, Cock, Vagina } from '@/types/game/body';
import type { StorageItem } from '@shared/types/game/storage';

export type CharacterState = {
  PC: PlayerCharacter;
} & Record<string, Character | undefined>;

export type Character = {
  cocks: Cock[];
  vaginas: Vagina[];
  ass: Vagina;
  breastRows: BreastRow[];
  perks: StorageItem[];
  statusEffects: StorageItem[];
  keyItems: StorageItem[];
  sexualPreferences: SexualPreferences;
  pregnancyData: PregnancyData[];
  short: string;
  long_internal: string;
  originalRace: string;
  fluidSimulate: boolean;
  lustSimulate: boolean;
  statusSimulate: boolean;
  sellMarkup: number;
  buyMarkdown: number;
  Internal_physiqueRaw: number;
  Internal_reflexesRaw: number;
  Internal_aimRaw: number;
  Internal_intelligenceRaw: number;
  Internal_willpowerRaw: number;
  Internal_libidoRaw: number;
  Internal_taintRaw: number;
  physiqueMod: number;
  reflexesMod: number;
  aimMod: number;
  intelligenceMod: number;
  willpowerMod: number;
  libidoMod: number;
  taintMod: number;
  affinity: string;
  characterClass: number;
  personality: number;
  exhibitionismRaw: number;
  HPRaw: number;
  HPMod: number;
  shieldsRaw: number;
  lustRaw: number;
  lustMod: number;
  energyRaw: number;
  energyMod: number;
  isLustImmune: boolean;
  level: number;
  credits: number;
  femininity: number;
  eyeType: number;
  eyeColor: string;
  tallness: number;
  thickness: number;
  tone: number;
  hairColor: string;
  beardColor: string;
  scaleColor: string;
  furColor: string;
  hairLength: number;
  hairStyle: string;
  hairType: number;
  beardType: number;
  beardLength: number;
  beardStyle: number;
  skinType: number;
  skinTone: string;
  skinAccent: string;
  skinFlags: number[];
  faceType: number;
  faceFlags: number[];
  tongueType: number;
  tongueFlags: number[];
  lipMod: number;
  lipColor: string;
  earType: number;
  earLength: number;
  antennae: number;
  antennaeType: number;
  horns: number;
  hornType: number;
  hornLength: number;
  armType: number;
  armFlags: number[];
  gills: boolean;
  wingCount: number;
  wingType: number;
  legType: number;
  legCount: number;
  legFlags: number[];
  earFlags: number[];
  cumType: number;
  genitalSpot: number;
  crotchFlags: number[];
  tailType: number;
  tailCount: number;
  tailFlags: number[];
  tailCock: Cock;
  tailCunt: Vagina;
  hipRatingRaw: number;
  hipRatingMod: number;
  buttRatingRaw: number;
  buttRatingMod: number;
  balls: number;
  ballSizeRaw: number;
  ballSizeMod: number;
  Internal_ballFullness: number;
  Internal_ballEfficiency: number;
  refractoryRate: number;
  scrotumTypeRaw: number;
  scrotumColorRaw: string;
  cockVirgin: boolean;
  clitLength: number;
  elasticity: number;
  girlCumType: number;
  vaginalVirgin: boolean;
  nippleColor: string;
  nipplesPerBreast: number;
  nippleLengthRatio: number;
  nippleWidthRatio: number;
  dickNippleMultiplier: number;
  dickNippleType: number;
  milkType: number;
  milkMultiplier: number;
  milkStorageMultiplier: number;
  milkFullness: number;
  milkRate: number;
  analVirgin: boolean;
  cumMultiplierRaw: number;
  cumMultiplierMod: number;
  girlCumMultiplierRaw: number;
  girlCumMultiplierMod: number;
  impregnationType: string;
  cumQualityRaw: number;
  cumQualityMod: number;
  pregnancyIncubationBonusFatherRaw: number;
  pregnancyIncubationBonusFatherMod: number;
  pregnancyMultiplierRaw: number;
  pregnancyMultiplierMod: number;
  fertilityRaw: number;
  fertilityMod: number;
  pregnancyIncubationBonusMotherRaw: number;
  pregnancyIncubationBonusMotherMod: number;
  bellyRatingRaw: number;
  bellyRatingMod: number;
  eggs: number;
  fertilizedEggs: number;
  uniqueName: string | null;
} & Serializable;

export type PlayerCharacter = {
  XPRaw: number;
  pendingStatPoints: number;
  unspentStatPoints: number;
  unclaimedClassPerks: number;
  unclaimedGenericPerks: number;
  synthWombSetting: number; // FIXME
  inseminatorProEnabled: number; // FIXME
  inseminatorProVirility: number;
  inseminatorProMaxCum: number;
  inseminatorProRefractoryRate: number;
  inseminatorProRefractoryRateOrig: number;
  inseminatorProCumQ: number;
  // dildo: null; // FIXME
} & Character;

export type SexualPreferences = {
  sexPrefs: Record<string, number | undefined>;
} & Serializable;

export type PregnancyData = {
  pregnancyIncubation: number;
  pregnancyType: string;
  pregnancyQuantity: number;
  pregnancyIncubationMulti: number;
  pregnancyBellyRatingContribution: number;
} & Serializable;
